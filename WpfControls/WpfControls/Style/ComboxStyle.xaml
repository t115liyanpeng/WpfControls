<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfControls;component/Resources/BaseDictionary.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Storyboard x:Key="checked" FillBehavior="HoldEnd">
        <DoubleAnimation From="0" To="180" Duration="0:0:0.5" Storyboard.TargetName="tog_btn" Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)"></DoubleAnimation>
    </Storyboard>
    <!--combox边上按钮样式-->
    <Style x:Key="combox_toggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <TextBlock x:Name="tog_btn" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Background}" FontSize="{TemplateBinding FontSize}" Style="{StaticResource IconFont}" Text="&#xe625;">
                        <TextBlock.RenderTransform>
                            <RotateTransform x:Name="rotate" Angle="0"></RotateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                                    <Storyboard AutoReverse="False" FillBehavior="HoldEnd">
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            From="0"
                                            To="180"
                                            Storyboard.TargetName="tog_btn" 
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">

                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                                    <Storyboard AutoReverse="False" FillBehavior="HoldEnd">
                                        <DoubleAnimation 
                                            Duration="0:0:0.2" 
                                            From="180"
                                            To="0"
                                            Storyboard.TargetName="tog_btn" 
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">

                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="toggle_text" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <TextBlock x:Name="tog_btn" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Background}" FontSize="{TemplateBinding FontSize}"  Text="{TemplateBinding Content}">
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="combox_item" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <StackPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" Orientation="Horizontal">
                        <TextBlock Padding="3" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}"></TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SideLevel2}"></Setter>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource MainCheckBase}"></Setter>
                <Setter Property="Foreground" Value="{StaticResource SideLevel1}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LDefaultComBox" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource combox_item}"></Setter>
        <Setter Property="MinHeight" Value="30"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource MainNav}"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Width="{TemplateBinding Width}" BorderThickness="{TemplateBinding BorderThickness}" x:Name="root_part">
                        <Grid x:Name="content">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton 
                                Margin="5,0,0,0"
                                Content="{TemplateBinding Text}" 
                                Style="{StaticResource toggle_text}" 
                                x:Name="text_panel" 
                                Grid.Column="0" 
                                VerticalAlignment="Center" 
                                IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >

                            </ToggleButton>
                            <StackPanel x:Name="toggle_panel" Grid.Column="1" VerticalAlignment="Center">
                                <ToggleButton x:Name="toggle" 
                                              FontSize="{TemplateBinding FontSize}" 
                                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                              Foreground="{StaticResource SideLevel7}" 
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{StaticResource combox_toggle}">
                                    <ToggleButton.RenderTransform>
                                        <RotateTransform x:Name="roat" Angle="0"></RotateTransform>
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>
                            </StackPanel>
                            <Popup x:Name="popup_panel"
                                   Grid.Column="0" 
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                   Placement="Bottom" 
                                   VerticalOffset="15"
                                   AllowsTransparency="True"
                                   PopupAnimation="None"
                                   StaysOpen="False"
                                   >
                               
                                <Border x:Name="dropDownBorder" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0" Y="0"></TranslateTransform>
                                    </Border.RenderTransform>
                                    <Border.Triggers>
                                        <EventTrigger RoutedEvent="Loaded">
                                            <BeginStoryboard>
                                                <Storyboard TargetName="dropDownBorder" TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                                                    <DoubleAnimation From="10" To="0" Duration="0:0:0.3" FillBehavior="HoldEnd"></DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Border.Triggers>
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                        
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>